[{"/Users/nathan/Documents/Test/react-image-slider-carousel-main/src/index.js":"1","/Users/nathan/Documents/Test/react-image-slider-carousel-main/src/App.js":"2","/Users/nathan/Documents/Test/react-image-slider-carousel-main/src/reportWebVitals.js":"3","/Users/nathan/Documents/Test/react-image-slider-carousel-main/src/components/SliderData.js":"4","/Users/nathan/Documents/Test/react-image-slider-carousel-main/src/components/ImageSlider.js":"5","/Users/nathan/Documents/GitHub/Web Port2/src/index.js":"6","/Users/nathan/Documents/GitHub/Web Port2/src/reportWebVitals.js":"7","/Users/nathan/Documents/GitHub/Web Port2/src/App.js":"8","/Users/nathan/Documents/GitHub/Web Port2/src/components/Navbar.js":"9","/Users/nathan/Documents/GitHub/Web Port2/src/components/Slider/Slider.js":"10","/Users/nathan/Documents/GitHub/Web Port2/src/components/Slider/BtnSlider.js":"11","/Users/nathan/Documents/GitHub/Web Port2/src/components/Slider/dataSlider.js":"12"},{"size":500,"mtime":1606845024000,"results":"13","hashOfConfig":"14"},{"size":213,"mtime":1606845024000,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1606845024000,"results":"16","hashOfConfig":"14"},{"size":833,"mtime":1630621132152,"results":"17","hashOfConfig":"14"},{"size":1130,"mtime":1606845024000,"results":"18","hashOfConfig":"14"},{"size":500,"mtime":1606845024000,"results":"19","hashOfConfig":"20"},{"size":362,"mtime":1606845024000,"results":"21","hashOfConfig":"20"},{"size":294,"mtime":1631037470287,"results":"22","hashOfConfig":"20"},{"size":787,"mtime":1635372641717,"results":"23","hashOfConfig":"20"},{"size":2330,"mtime":1634924548075,"results":"24","hashOfConfig":"20"},{"size":556,"mtime":1630962649138,"results":"25","hashOfConfig":"20"},{"size":1490,"mtime":1644868222102,"results":"26","hashOfConfig":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"14z1j3l",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},"1o8wyqr",{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"41"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"41"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/nathan/Documents/Test/react-image-slider-carousel-main/src/index.js",[],["56","57"],"/Users/nathan/Documents/Test/react-image-slider-carousel-main/src/App.js",[],"/Users/nathan/Documents/Test/react-image-slider-carousel-main/src/reportWebVitals.js",[],"/Users/nathan/Documents/Test/react-image-slider-carousel-main/src/components/SliderData.js",[],"/Users/nathan/Documents/Test/react-image-slider-carousel-main/src/components/ImageSlider.js",["58"],"import React, { useState } from 'react';\nimport { SliderData } from './SliderData';\nimport { FaArrowAltCircleRight, FaArrowAltCircleLeft } from 'react-icons/fa';\n\nconst ImageSlider = ({ slides }) => {\n  const [current, setCurrent] = useState(0);\n  const length = slides.length;\n\n  const nextSlide = () => {\n    setCurrent(current === length - 1 ? 0 : current + 1);\n  };\n\n  const prevSlide = () => {\n    setCurrent(current === 0 ? length - 1 : current - 1);\n  };\n\n  if (!Array.isArray(slides) || slides.length <= 0) {\n    return null;\n  }\n\n  return (\n    <section className='slider'>\n      <FaArrowAltCircleLeft className='left-arrow' onClick={prevSlide} />\n      <FaArrowAltCircleRight className='right-arrow' onClick={nextSlide} />\n      {SliderData.map((slide, index) => {\n        return (\n          <div\n            className={index === current ? 'slide active' : 'slide'}\n            key={index}\n          >\n            {index === current && (\n              <img src={slide.image} alt='travel image' className='image' />\n            )}\n          </div>\n        );\n      })}\n    </section>\n  );\n};\n\nexport default ImageSlider;\n","/Users/nathan/Documents/GitHub/Web Port2/src/index.js",[],["59","60"],"/Users/nathan/Documents/GitHub/Web Port2/src/reportWebVitals.js",[],"/Users/nathan/Documents/GitHub/Web Port2/src/App.js",[],"/Users/nathan/Documents/GitHub/Web Port2/src/components/Navbar.js",[],"/Users/nathan/Documents/GitHub/Web Port2/src/components/Slider/Slider.js",["61"],"import React, { useState } from 'react'\nimport './Slider.css'\nimport BtnSlider from './BtnSlider'\nimport dataSlider from './dataSlider'\n\nexport default function Slider() {\n\n    const [slideIndex, setSlideIndex] = useState(1)\n\n    const nextSlide = () => {\n        if (slideIndex !== dataSlider.length) {\n            setSlideIndex(slideIndex + 1)\n        }\n        else if (slideIndex === dataSlider.length) {\n            setSlideIndex(1)\n        }\n    }\n\n    const prevSlide = () => {\n        if (slideIndex !== 1) {\n            setSlideIndex(slideIndex - 1)\n        }\n        else if (slideIndex === 1) {\n            setSlideIndex(dataSlider.length)//if index is equal to 1 go back to last slide in index \n        }\n    }\n\n    const moveDot = index => {\n        setSlideIndex(index)\n    }\n\n    return (\n        <div className=\"container-slider\">\n            {dataSlider.map((obj, index) => {\n                return (\n                    <div\n                        key={obj.id}//references data slider and its ids\n                        className={slideIndex === index + 1 ? \"slide active-anim\" : \"slide\"}//css classes active if true\n                    >\n                        <img\n                            src={process.env.PUBLIC_URL + `/Imgs/img${index + 1}.png`}\n                        />\n\n                        <p className='cap'>{obj.title} {obj.subTitle}    {obj.CapTion}</p>\n\n\n                    </div>\n\n\n\n                    /*{process.env.PUBLIC_URL adds your websiste url\n                     then `/Imgs/img${index + 1}.jpg` references your images when you build your final folder\n                     \n                     \n                     \n                                          btn move slide arrow fuction combines with next slide\n\n                     */\n                )\n            })}\n            <BtnSlider moveSlide={nextSlide} direction={\"next\"} />\n            <BtnSlider moveSlide={prevSlide} direction={\"prev\"} />\n\n            <div className=\"container-dots\">\n                {Array.from({ length: 6 }).map((item, index) => (\n                    <div\n                        onClick={() => moveDot(index + 1)}\n                        className={slideIndex === index + 1 ? \"dot active\" : \"dot\"}\n                    ></div>\n                ))}\n            </div>\n        </div>\n    )\n}\n","/Users/nathan/Documents/GitHub/Web Port2/src/components/Slider/BtnSlider.js",["62"],"import React from \"react\";\nimport \"./Slider.css\";\nimport leftArrow from \"./icons/left-arrow.svg\";\nimport rightArrow from \"./icons/right-arrow.svg\";\n\nexport default function BtnSlider({ direction, moveSlide }) {\n  console.log(direction, moveSlide);\n  return (\n    <button\n      onClick={moveSlide}\n      className={direction === \"next\" ? \"btn-slide next\" : \"btn-slide prev\"}//if next is true slide next else : slide prev\n    >\n      <img src={direction === \"next\" ? rightArrow : leftArrow} />\n    </button>\n  );//if next is true use right arrow else left\n}\n","/Users/nathan/Documents/GitHub/Web Port2/src/components/Slider/dataSlider.js",[],{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":32,"column":15,"nodeType":"69","endLine":32,"endColumn":77},{"ruleId":"63","replacedBy":"70"},{"ruleId":"65","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":40,"column":25,"nodeType":"69","endLine":42,"endColumn":27},{"ruleId":"72","severity":1,"message":"73","line":13,"column":7,"nodeType":"69","endLine":13,"endColumn":66},"no-native-reassign",["74"],"no-negated-in-lhs",["75"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement",["74"],["75"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation"]